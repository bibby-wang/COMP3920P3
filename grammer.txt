<program> ::= CD19 <id> <globals> <funcs> <mainbody>
<globals> ::= <consts> <types> <arrays>
<consts> ::= constants <initlist> | ¦Å
<initlist> ::= <init> <initlistb>
<initlistb> ::= , <initlist> | ¦Å
<init> ::= <id> = <expr>
<types> ::= types <typelist> | ¦Å
<arrays> ::= arrays <arrdecls> | ¦Å
<funcs> ::= <func> <funcs> | ¦Å
<mainbody> ::= main <slist> begin <stats> end CD19 <id>
<slist> ::= <sdecl> <slistb>
<slistb> ::= , <slist> | ¦Å
<typelist> ::= <type> <typelistb>
<typelistb> ::= <typelist> | ¦Å
<type> ::= <structid> is <fields> end | <typeid> is array [ <expr> ] of <structid>
<fields> ::= <sdecl> <fieldsb>
<fieldsb> ::= , <fields> | ¦Å
<sdecl> ::= <id> : <stype>
<arrdecls> ::= <arrdecl> <arrdeclsb>
<arrdeclsb> ::= , <arrdecls> | ¦Å
<arrdecl> ::= <id> : <typeid>
<func> ::= function <id> ( <plist> ) : <rtype> <locals> begin <stats> end
<rtype> ::= integer | real | boolean | void
<plist> ::= <params> | ¦Å
<params> ::= <param> <paramsb> 
<paramsb> ::= , <params> | ¦Å
<param> ::= <decl> | const <arrdecl>
<locals> ::= <dlist> | ¦Å
<dlist> ::= <decl> <dlistb>
<dlistb> ::= , <dlist> | ¦Å
<decl> ::= <sdecl> | <arrdecl>
<stype> ::= integer | real | boolean
<stats> ::= <stat> ; <statsb> | <strstat> <statsb> 
<statsb> ::= <stats>  | ¦Å
<strstat> ::= <forstat> | <ifstat>
<stat> ::= <repstat> | <asgnstat> | <iostat> | <callstat> | <returnstat>
<forstat> ::= for ( <asgnlist> ; <bool> ) <stats> end
<repstat> ::= repeat ( <asgnlist> ) <stats> until <bool>
<asgnlist> ::= <alist> | ¦Å
<alist> ::= <asgnstat> <alistb>
<alistb> ::= <asgnstat> , <alist> | ¦Å
<ifstat> ::= if ( <bool> ) <stats> <ifstatb>
<ifstatb> ::= end | else <stats> end
<asgnstat> ::= <var> <asgnop> <bool>
<asgnop> ::= = | += | -= | *= | /=
<iostat> ::= input <vlist> | print <prlist> | printline <prlist>
<callstat> ::= <id> ( <callstatb> ) 
<callstatb> ::= <elist> | ¦Å
<returnstat> ::= return <returnstatb>
<returnstatb> ::= <expr> | ¦Å
<vlist> ::= <var> <vlistb>
<vlistb> ::= , <vlist> | ¦Å
<var> ::= <id> <varb>
<varb>::=  [<expr>] . <id> | ¦Å
<elist> ::= <bool> <elistb>
<elistb> ::= , <elist> | ¦Å 
<bool> ::=  <rel> <boolb> 
<boolb> ::= <logop> <rel> <boolb> | ¦Å
<rel> ::= not <expr> <relop> <expr> | <expr> <relb> 
<relb> ::= <relop> <expr>  | ¦Å
<logop> ::= and | or | xor
<relop> ::= == | != | > | <= | < | >=
<expr> ::= <term> <exprb>
<exprb> ::= + <term> <exprb> | - <term> <exprb> | ¦Å
<term> ::= <fact> <termb>
<termb> ::= * <fact> <termb> | / <fact> <termb> | % <fact> <termb> | ¦Å
<fact> ::=  <exponent> <factb> 
<factb> ::=  ^ <exponent> <factb> | ¦Å
<exponent> ::= <var> | <intlit> | <reallit> | <fncall> | true | false
<exponent> ::= ( <bool> )
<fncall> ::= <id> ( <fncallb> )
<fncallb> ::= <elist> | ¦Å
<prlist> ::= <printitem> <prlistb>
<prlistb> ::= , <prlist> | ¦Å
<printitem> ::= <expr> | <string>
<id> ::= id
<structid> ::= id
<typeid> ::= id
<intlit> ::= 42
<reallit> ::= 0.0000001000000100000110
<string> ::= "oh hai mark"
